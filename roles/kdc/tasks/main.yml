# Kerberos packages
- name: Install kerberos packages
  environment: 
   DEBIAN_FRONTEND: noninteractive
  become: true
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - krb5-kdc
    - krb5-admin-server

- name: upload kdc conf
  template:
    src: kdc.conf
    dest: /etc/krb5kdc/kdc.conf
  become: yes


#krb5.conf should already have been configured in common

- name: create kerberos database
  shell: |
    kdb5_util create <<EOF
    confluent
    confluent
    EOF
  become: yes
  ignore_errors: yes

- name: restart kdc
  service:
    name: krb5-kdc
    state: restarted
  become: yes

- name: create security dir
  shell: mkdir /etc/security/keytabs
  ignore_errors: yes
  become: yes

- name: create zookeeper principals
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - addprinc -randkey zookeeper/as-zookeeper-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zookeeper/as-zookeeper-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zookeeper/as-zookeeper-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zkclient/as-zookeeper-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zkclient/as-zookeeper-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zkclient/as-zookeeper-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zkclient/as-broker-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zkclient/as-broker-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey zkclient/as-broker-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey c3/as-c3-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey connect/as-connect-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey client/as-performance-consumer-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey client/as-performance-producer-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: create zookeeper keytabs
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zookeeper/as-zookeeper-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zookeeper/as-zookeeper-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zookeeper/as-zookeeper-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zkclient/as-zookeeper-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zkclient/as-zookeeper-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zkclient/as-zookeeper-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zkclient/as-broker-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zkclient/as-broker-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/zookeeper-{{ tags["region"] }}.keytab  zkclient/as-broker-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: fetch zookeeper keytabs 
  fetch:
    src: /etc/security/keytabs/{{item}}
    dest: "{{ role_path }}/../../secrets/"
    flat: yes
  with_items: 
    - zookeeper-{{ tags["region"] }}.keytab
  become: yes

- name: create broker principals
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - addprinc -randkey kafka/as-broker-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey kafka/as-broker-1-{{ tags["region"] }}b@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey kafka/as-broker-2-{{ tags["region"] }}c@{{ tags["region"] | upper }}.CONFLUENT.IO
    - addprinc -randkey kafka@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: create broker keytabs
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - ktadd -k /etc/security/keytabs/broker-{{ tags["region"] }}.keytab  kafka@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: fetch broker keytabs 
  fetch:
    src: /etc/security/keytabs/{{item}}
    dest: "{{ role_path }}/../../secrets/"
    flat: yes
  with_items: 
    - broker-{{ tags["region"] }}.keytab
  become: yes

- name: create c3 keytabs
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - ktadd -k /etc/security/keytabs/c3-{{ tags["region"] }}.keytab  c3/as-c3-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: fetch c3 keytabs 
  fetch:
    src: /etc/security/keytabs/{{item}}
    dest: "{{ role_path }}/../../secrets/"
    flat: yes
  with_items: 
    - c3-{{ tags["region"] }}.keytab
  become: yes

- name: create connect keytabs
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - ktadd -k /etc/security/keytabs/connect-{{ tags["region"] }}.keytab  connect/as-connect-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: fetch connect keytabs 
  fetch:
    src: /etc/security/keytabs/{{item}}
    dest: "{{ role_path }}/../../secrets/"
    flat: yes
  with_items: 
    - connect-{{ tags["region"] }}.keytab
  become: yes

- name: create client keytabs
  shell: >
    kadmin.local -q "{{item}}";
  become: yes
  with_items:
    - ktadd -k /etc/security/keytabs/client-{{ tags["region"] }}.keytab  client/as-performance-consumer-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
    - ktadd -k /etc/security/keytabs/client-{{ tags["region"] }}.keytab  client/as-performance-producer-0-{{ tags["region"] }}a@{{ tags["region"] | upper }}.CONFLUENT.IO
  ignore_errors: no

- name: fetch client keytabs 
  fetch:
    src: /etc/security/keytabs/{{item}}
    dest: "{{ role_path }}/../../secrets/"
    flat: yes
  with_items: 
    - client-{{ tags["region"] }}.keytab
  become: yes





