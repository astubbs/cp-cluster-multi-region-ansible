- name: killall java
  shell: killall java
  ignore_errors: yes

- name: Wait for port to disappear # replace with process monitor
  wait_for:
    port: "9021"
    state: absent
    timeout: 300

- name: C3 Base Settings
  vars:
    plantext_port: 9092 # move into global vars
    broker_port: "{{plantext_port}}"
  blockinfile:
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK Base Settings -->"
    destfile: /home/ubuntu/cp/confluent-3.3.1/etc/confluent-control-center/control-center.properties
    block: |
      zookeeper.connect=as-zookeeper-0-{{ tags["region"] }}a:2181,as-zookeeper-1-{{ tags["region"] }}b:2181,as-zookeeper-2-{{ tags["region"] }}c:2181
      bootstrap.servers=as-broker-0-{{ tags["region"] }}a:{{broker_port}},as-broker-1-{{ tags["region"] }}b:{{broker_port}},as-broker-2-{{ tags["region"] }}c:{{broker_port}}

      confluent.controlcenter.connect.cluster=as-connect-0-{{ tags["region"] }}a:8083

      confluent.controlcenter.internal.topics.replication=3
      confluent.monitoring.interceptor.topic.replication=3
      confluent.controlcenter.command.topic.replication=3

- name: C3 Settings SASL_PLANTEXT block
  vars:
    sasl_plantext_port: 9094 # move into global vars
    broker_port: "{{sasl_plantext_port}}"
  blockinfile:
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK SASL_PLAINTEXT settings-->"
    destfile: /home/ubuntu/cp/confluent-3.3.1/etc/confluent-control-center/control-center.properties
    block: |
      bootstrap.servers=as-broker-0-{{ tags["region"] }}a:{{broker_port}},as-broker-1-{{ tags["region"] }}b:{{broker_port}},as-broker-2-{{ tags["region"] }}c:{{broker_port}}

      ########### Control Center security for SASL_PLAINTEXT ###########
      confluent.controlcenter.streams.security.protocol=SASL_PLAINTEXT
      confluent.controlcenter.streams.sasl.mechanism=PLAIN

- name: SASL_SSL block
  vars:
    sasl_ssl_port: 9093
    broker_port: "{{sasl_ssl_port}}"
    ssl_truststore_location: /home/ubuntu/kafka.client.truststore.jks
    ssl_keystore_location: /home/ubuntu/kafka.server.keystore.jks
    store_password: password123
  blockinfile:
    marker: "<!-- {mark} ANSIBLE MANAGED SASL_SSL settings-->"
    destfile: /home/ubuntu/cp/confluent-3.3.1/etc/confluent-control-center/control-center.properties
    block: |
      confluent.controlcenter.streams.security.protocol=SASL_SSL

      bootstrap.servers=as-broker-0-{{ tags["region"] }}a:{{broker_port}},as-broker-1-{{ tags["region"] }}b:{{broker_port}},as-broker-2-{{ tags["region"] }}c:{{broker_port}}

      ########### Control Center security for SASL_SSL ###########
      security.protocol=SSL
      sasl.mechanism=SASL_SSL
      ssl.keystore.location={{ssl_keystore_location}}
      ssl.keystore.password={{store_password}}
      ssl.key.password={{store_password}}
      ssl.truststore.location={{ssl_truststore_location}}
      ssl.truststore.password={{store_password}}

      confluent.controlcenter.streams.sasl.mechanism=PLAIN
      confluent.controlcenter.streams.security.protocol=SASL_SSL
      confluent.controlcenter.streams.ssl.keystore.location={{ssl_keystore_location}}
      confluent.controlcenter.streams.ssl.keystore.password={{store_password}}
      confluent.controlcenter.streams.ssl.key.password={{store_password}}
      confluent.controlcenter.streams.ssl.truststore.location={{ssl_truststore_location}}
      confluent.controlcenter.streams.ssl.truststore.password={{store_password}}

- name: create security dir
  shell: mkdir /etc/security/keytabs
  ignore_errors: yes
  sudo: yes

- name: copy keytabs
  copy: 
    src: "{{ role_path }}/../../secrets/{{item}}"
    dest: /etc/security/keytabs/
  with_items: 
    - c3-{{ tags["region"] }}.keytab
  sudo: yes

- name: upload JAAS file
  template:
    src: kafka_client_jaas.conf.j2
    dest: ~/kafka_client_jaas.conf

- name: run c3
  command: >
    env CONTROL_CENTER_OPTS=-Djava.security.auth.login.config=kafka_client_jaas.conf
    cp/confluent-3.3.1/bin/control-center-start -daemon cp/confluent-3.3.1/etc/confluent-control-center/control-center.properties

# C3 takes too long to start to block the playbook. As nothing depends on 
# it except flesh bags, we can either check at the end it it came up, or just 
# cross our fingers until we have process monitoring in place.
# - name: Wait 300 seconds for port to become open on the host
#   wait_for:
#   port: 9021
#   # delay: 10
#   timeout: 300
